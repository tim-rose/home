#!/bin/sh
# define function/aliases...
#
window_title () { :; }
env()	{ /usr/bin/env|sort; }
dir()	{ command ls --color=auto -Fax "$@"; }
ls()	{ command ls --color=auto "$@"; }
#dir()	{ command ls -G -Fax "$@"; }
#ls()	{ command ls -G "$@"; }
path()  { eval "echo \${${1:-PATH}}" | tr ':' '\012';  }
less4()	{ less -x4 $*; }

make()  { command make -I $DEVKIT_HOME/include "$@"; }
mk()    { command make -I $DEVKIT_HOME/include -f $HOME/etc/tasks.mk "$@"; }

find0() { find $* -print0; }
#
# calc() --Echo a calculation result.
#
calc() { echo "scale=2; $*" | bc; }
#
# maxlen() --Calculate the maximum line length of stdin
#
maxlen() { sed -e 's/./+1/g' -e 's/^/0/'| bc | sort -rn | head -1; }
man() { window_title "%s manual page" "$1"; /usr/bin/man "$@"; }

man() { window_title "%s manual page" "$1"; /usr/bin/man "$@"; }

#
# log-count() --Interactively watch an aggregation/summation of log data.
#
log_count() {
 watch "tail -10000 ${1:-/var/log/nginx/tutsplus.com.proxy.log}|cut -d' ' -f1 |sort |uniq -c|sort -n|tail -30"
}
#
# tgrep() --"table" grep; print the first (header) line, and matching others.
#
tgrep() { local tag=$1; shift; cat $* |sed -ne1p -e "/$tag/p"; }
